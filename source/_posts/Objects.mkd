---
title: es6的Objects函数
date: 2018-12-15 10:33:09
tags: javascript
categories: javascript
---

## <center>对象的扩展</center>

### 1.es6允许在对象之中直接书写变量    

- 例一    

```
function f(x, y) {
    return {x ,y}
}
//等同于
function f(x, y) {
    return {x: x, y: y}
}
f(1, 2) // Object {x :1, y:2}
```
 - 例二    

 ```
 let birth = '200/01/01'
 const Person = {
    'name': '张三',
    birth, //等同于birth: birth
    //等同于hello: f()
    hello() {console.log('我的名字是:', this.name)}
 }
 ```
<!--more -->
 ####2.属性名表达式    
 - 例一

```
let propKey = 'foo'
let obj = {
    [propKey]: true,
    ['a' + 'bc']: 123
}
obj.abc //123
obj.foo //true
obj[propKey] //true
```
### 属性的可枚举性和遍历

 - 可枚举性

对象的每个属性都有一个描述对象(Descriptor)，用来控制该属性的行为，Object.getOwnPropertyDescriptor方法可以获得该属性的描述对象。    
```
let obj = {foo: 123}
Object.getOwnPropertyDescriptor(obj, 'foo')
//
{
    value: 123,
    writeable: true,
    enumerable: true,
    configurable: true
}
```
es6共有5种方法可以遍历对象的属性    
 - for ... in
 - Object.keys(obj)
 - OBject.getOwnPropertyNames(obj)
 - OBject.getOwnPropertySymbols(obj)
 - Reflect.ownKeys(obj)
